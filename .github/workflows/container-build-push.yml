name: Build and push

on:
  workflow_dispatch:

jobs:
  build_and_push:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64,amd64

      - name: Ensure QEMU user static is available
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(git describe --tags --always --dirty || echo "dev-$(date +%Y%m%d-%H%M%S)")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: extract_metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            hucknz/posthook
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ env.VERSION }}
            type=raw,value=latest
  
      - name: Build and push Docker images
        id: build_images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.extract_metadata.outputs.tags }}
          labels: ${{ steps.extract_metadata.outputs.labels }}
          build-args: |
            BUILD_DATE=${{ github.run_id }}
            VERSION=latest
            DOCKER_BUILDKIT=1
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:cache,mode=max
          provenance: false

      - name: Notify outcome
        if: always()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          noprefix: true
          status: ${{ job.status }}
          title: ${{ github.workflow }} ${{ job.status }}